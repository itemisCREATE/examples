/** Generated by itemis CREATE code generator. */

pub trait Statemachine {
    /*
Enters the state machine. Sets the state machine into a defined state.
*/
    fn enter(&mut self) -> ();

    /*
Exits the state machine. Leaves the state machine with a defined state.
*/
    fn exit(&mut self) -> ();

    /*
Checks whether the state machine is active. 
A state machine is active if it has been entered. It is inactive if it has not been entered at all or if it has been exited.
*/
    fn is_active(&self) -> bool;

    /*
Checks if all active states are final. 
If there are no active states then the state machine is considered being inactive. In this case this method returns false.
*/
    fn is_final(&self) -> bool;
}

pub trait CycleBasedStatemachine : Statemachine {
    fn run_cycle (&mut self) -> ();
}

